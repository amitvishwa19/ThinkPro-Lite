CREATE TABLE user_details(
user_id serial PRIMARY KEY,
first_name     	VARCHAR (50) ,
middle_name    	VARCHAR (50) ,
last_name    	VARCHAR (50) ,
gender    	VARCHAR (10) ,
dob		VARCHAR (50) ,
blood_group	VARCHAR (50) ,
contact_details	VARCHAR (50) ,
email 		VARCHAR (355),
qualification	VARCHAR (355),
work_experience	VARCHAR (355),
address		VARCHAR (355),
empl_id         VARCHAR (50) ,
project_id      VARCHAR (50) ,
designation     VARCHAR (50) ,
grade	        VARCHAR (50) ,
doj	        VARCHAR (50) ,
shift_details   VARCHAR (50) ,
shift_timing	VARCHAR (50) ,
role	        VARCHAR (50) ,
billing	        VARCHAR (50) ,
utilization     VARCHAR (50) ,
lan_id	        VARCHAR (50) ,
desk_id	        VARCHAR (50) ,
asset_id        VARCHAR (50) ,
ip_address      VARCHAR (50) ,
access_card_no	VARCHAR (50) ,
account_type	VARCHAR (355),
account_status	VARCHAR (355),
login_attempt	INT,
password	VARCHAR (355),
password_type	VARCHAR (50),
password_change_date    timestamp,
secret_ques1	VARCHAR (355),
secret_answer1	VARCHAR (355),
secret_ques2	VARCHAR (355),
secret_answer2	VARCHAR (355),
secret_ques3	VARCHAR (355),
secret_answer3	VARCHAR (355)
);


============ok==================
CREATE TABLE project_details(
project_id serial PRIMARY KEY,
project     	VARCHAR (100) ,
process    	VARCHAR (100) ,
sub_process    	VARCHAR (100) ,
project_lead   	VARCHAR (100) ,
project_manager	VARCHAR (100),
delivery_managerVARCHAR (100),
project_won	VARCHAR (50),
project_nice_name VARCHAR (100),
timeview_type	VARCHAR (50),
syslock_time	NUMERIC,
backup_path TEXT,
status		VARCHAR (10)
);
============ok==================


CREATE TABLE app_option(
id serial PRIMARY KEY,
account     	VARCHAR (100) ,
status    	VARCHAR (100) ,
role    	VARCHAR (100) ,
billing   	VARCHAR (100) ,
utilization	VARCHAR (100),
leave_type	VARCHAR (100),
secret_question	VARCHAR (100)
);

CREATE TABLE time_activity(
act_id serial PRIMARY KEY,
seq		INT ,
project_id      NUMERIC ,
project    	VARCHAR (100) ,
process    	VARCHAR (100) ,
sub_process    	VARCHAR (100) ,
bucket    	VARCHAR (100) ,
activity    	TEXT ,
sub_activity   	TEXT,
task		TEXT,
upt		VARCHAR (200),
ex_lock		INT,
volume		INT,
aid  		INT,
cmnt  		INT,
readme		TEXT,
status	VARCHAR (10)
);

CREATE TABLE time_activity_user(
id serial PRIMARY KEY,
date		VARCHAR (50) ,
seq		INT ,
empl_id         VARCHAR (50) ,
empl_name       VARCHAR (100) ,
project    	VARCHAR (100) ,
process    	VARCHAR (100) ,
sub_process    	VARCHAR (100) ,
bucket    	VARCHAR (100) ,
activity    	VARCHAR (100) ,
sub_activity   	VARCHAR (200) ,
task		VARCHAR (200),
upt		VARCHAR (200),
ex_lock		INT,
volume		INT,
aid  		INT,
cmnt  		INT,
readme		TEXT,
status	VARCHAR (10)
);



CREATE TABLE think_profile(
profile_id serial PRIMARY KEY,
empl_id		VARCHAR (100) ,
name    	VARCHAR (100) ,
project    	VARCHAR (100) ,
process    	VARCHAR (100) ,
sub_process    	VARCHAR (100) ,
profile    	VARCHAR (100) ,
profile_name   	VARCHAR (100) 
);

CREATE TABLE app_config( 
id serial PRIMARY KEY,
project    	VARCHAR (100) ,
process    	VARCHAR (100) ,
sub_process    	VARCHAR (100) ,
type    	VARCHAR (100) ,
option   	VARCHAR (1000) 
);



CREATE TABLE time_view(
id serial PRIMARY KEY,
date		DATE ,
empl_id		VARCHAR (100) ,
name    	VARCHAR (100) ,
project    	VARCHAR (100) ,
process    	VARCHAR (100) ,
sub_process    	VARCHAR (100) ,
activity    	VARCHAR (100) ,
sub_activity   	VARCHAR (200) ,
task		VARCHAR (200),
action		VARCHAR (100) ,
start_time	VARCHAR (100) ,
end_time	VARCHAR (100) ,
total_time	NUMERIC ,
volume		INT ,
act_id		VARCHAR (100) ,
comment		TEXT,
added_by	VARCHAR (100)
);

8573914243
nextval('time_view_id_seq'::regclass)

CREATE TABLE team_view(
id serial PRIMARY KEY,
act_id		VARCHAR (100) ,
name    	VARCHAR (100) ,
project    	VARCHAR (100) ,
process    	VARCHAR (100) ,
sub_process    	VARCHAR (100) ,
empl_id		VARCHAR (100) ,
date		VARCHAR (50) ,
status		VARCHAR (50) ,
activity_type	VARCHAR (100) ,
start_time	VARCHAR (100) ,
end_time	VARCHAR (100) ,
in_out		VARCHAR (100) ,
in_time		VARCHAR (100) ,
out_time	VARCHAR (100) 
);

CREATE TABLE break_time_log(
id serial PRIMARY KEY,
name		VARCHAR (100) ,
empl_id   	VARCHAR (100) ,
project    	VARCHAR (100) ,
process    	VARCHAR (100) ,
sub_process    	VARCHAR (100) ,
date		VARCHAR (50) ,
status		VARCHAR (100) ,
start_time	VARCHAR (100) ,
end_time	VARCHAR (100) ,
total_time	VARCHAR (100) ,
comments	TEXT 
);



CREATE TABLE leave_view(
id serial PRIMARY KEY,
name    	VARCHAR (100) ,
empl_id		VARCHAR (100) ,
project    	VARCHAR (100) ,
process    	VARCHAR (100) ,
sub_process    	VARCHAR (100) ,
leave_type	VARCHAR (100) ,
date		VARCHAR (50) ,
start_date	VARCHAR (100) ,
end_date	VARCHAR (100) ,
leave_count	VARCHAR (100) ,
leave_time	VARCHAR (100) ,
comments	TEXT,
leave_status	VARCHAR (100) , 
approver	VARCHAR (100) ,
approver_comment	TEXT 
);


CREATE TABLE think_poll(
poll_id serial PRIMARY KEY,
target_group	VARCHAR (100), 
target		VARCHAR (50), 
date 		VARCHAR (50),
process_id    	INT,
poll_title 	TEXT,
poll_question	TEXT,
option_1	TEXT,
option_2	TEXT,
option_3	TEXT,
option_4	TEXT,
answer		TEXT,
poll_status	VARCHAR (10),
viewed          INT,
replied		INT,
comment		TEXT,
owner	VARCHAR (100)
);

CREATE TABLE think_poll_response(
date 		VARCHAR (50),
poll_id 	INT,
user_id 	INT,
process_id 	INT,
poll_title 	TEXT,
poll_question	TEXT,
poll_response	TEXT
);


CREATE TABLE think_notify(
notify_id serial PRIMARY KEY,
date 		VARCHAR (50),
process_id    	INT,
title 		TEXT,
body		TEXT,
viewed          INT,
replied		INT,
owner	VARCHAR (100)
);

CREATE TABLE think_holiday(
id serial PRIMARY KEY,
process_id    	INT,
project    	VARCHAR (100) ,
process    	VARCHAR (100) ,
sub_process    	VARCHAR (100) ,
h_date 		VARCHAR (50),
holiday_name	VARCHAR (200)
);

CREATE TABLE activity_tracker(
id serial PRIMARY KEY,
user_id    	INT,
process_id    	INT,
empl_id		VARCHAR (200) ,
name	   	VARCHAR (100) ,
project    	VARCHAR (100) ,
process    	VARCHAR (100) ,
sub_process    	VARCHAR (100) ,
date 		VARCHAR (50),
app_id		NUMERIC,
app_name    	VARCHAR (100) ,
app_title    	TEXT ,
start_time	VARCHAR (100) ,
end_time	VARCHAR (100),
total_time	NUMERIC
);

CREATE TABLE think_error_log(
id serial PRIMARY KEY,
user_id    	INT,
process_id    	INT,
date 		VARCHAR (50),
error_form	VARCHAR (50),
error_title	VARCHAR (50),
error_desc	TEXT
);

CREATE TABLE think_issue_log(
id serial PRIMARY KEY,
user_id    	INT,
process_id    	INT,
date 		VARCHAR (50),
log_type	VARCHAR (50),
log_title     	TEXT,
log_description TEXT,
logr_desc	TEXT,
logr_solution	TEXT,
log_status	VARCHAR (50)
);



CREATE TABLE think_activity_log(
id serial PRIMARY KEY,
act_id	VARCHAR (100)
user_id    	INT,
process_id    	INT,
date 		VARCHAR (50),
form_name	VARCHAR (50),
form_title	VARCHAR (50)
open_time	VARCHAR (100),
close_time	VARCHAR (100)
);

CREATE TABLE think_change_log(
id serial PRIMARY KEY,
user_id    	INT,
process_id    	INT,
date 		VARCHAR (50),
pre_value	TEXT,
post_value	TEXT
);

CREATE TABLE pass_change_audit(
id serial PRIMARY KEY,
user_id    	INT,
empl_id		VARCHAR (200) ,
process_id    	INT,
date 		VARCHAR (50),
psss		TEXT
);


CREATE TABLE app_setting(
id serial PRIMARY KEY,
option_id	NUMERIC,
option_type	VARCHAR (200),
option_name	VARCHAR (200)
);

CREATE TABLE app_user_version(
id serial PRIMARY KEY,
user_id         NUMERIC,
process_id      NUMERIC,
app_version     VARCHAR (200)
);



Try


Catch ex As Exception

	    Dim line As String = ex.StackTrace.ToString
            Dim LineNo() As String = Split(line, "line")
            Dim lg As New ErrorLogger
            lg.WriteErrorLog(Me.Name, System.Reflection.MethodBase.GetCurrentMethod().Name, "(" & LineNo(1) & ")" & ex.Message)

Finally
	 If conn.connection.State = ConnectionState.Open Then
                conn.ConnClose()
            End If

End Try


Dim Fun As New SysFunctions
                Fun.SysEventUpdate(TP_UserID, TP_LoginDate, "Switch User", SwitchStart, SwitchEnd, TotalSwitchTime, TP_UserName, TP_EmplID, TP_Project, TP_Process, TP_SubProcess)


PostgreSQL,ThinkPro,10.229.77.176,5432,postgres,1




